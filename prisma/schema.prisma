generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    name      String   @unique
    username  String   @unique
    email     String   @unique
    password  String
    roleId    Int      @default(3)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a relation to Role table
    role Role @relation(fields: [roleId], references: [id])
}

model Role {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a relation to User table
    users User[]
}

model Product {
    id          String   @id @default(cuid())
    name        String   @unique
    description String?
    price       Float
    stock       Int      @default(0)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // Define a relation to ProductCategory table
    categoryId Int?
    category   ProductCategory? @relation(fields: [categoryId], references: [id])

    // Define a relation to OrderDetail table
    orderDetails OrderDetail[]
}

model ProductCategory {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a relation to Product table
    products Product[]
}

model Customer {
    id        String   @id @default(cuid())
    firstName String   @unique
    lastName  String?
    email     String?  @unique
    phone     String?  @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a relation to Order table
    orders Order[]
}

model Order {
    id          String        @id @default(uuid())
    code        String        @unique
    total       Float         @default(0)
    status      OrderStatus   @default(PENDING)
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt

    // Define a relation to Customer table
    customerId String?
    customer   Customer?    @relation(fields: [customerId], references: [id])

    // Define a relation to OrderDetail table
    orderDetails OrderDetail[]
}

enum OrderStatus {
    PENDING
    COMPLETED
    CANCELLED
}

model OrderDetail {
    id        String   @id @default(cuid())
    quantity  Int
    subtotal  Float?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a relation to Order table
    orderId String
    order   Order  @relation(fields: [orderId], references: [id])

    // Define a relation to Product table
    productId String
    product   Product @relation(fields: [productId], references: [id])
}
